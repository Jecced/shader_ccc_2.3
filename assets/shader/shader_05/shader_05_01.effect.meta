{
  "ver": "1.0.25",
  "uuid": "025fe6f5-0a8a-449e-af3f-b2bcb5147021",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform vec2 u_resolution;\nfloat plot(vec2 st, float pct) {\n  return smoothstep(pct-0.02, pct, st.y) - smoothstep(pct, pct+0.02, st.y);\n}\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution / 2.0;\n  float y = step(0.5,st.x);\n  vec3 color = vec3(y);\n  float pct = plot(st, y);\n  color = (1.0-pct)*color + pct*vec3(0.0, 1.0, 0.0);\n  gl_FragColor = vec4(color, 1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision mediump float;\nuniform sampler2D texture;\nuniform Rsolution{\n  vec2 u_resolution;\n};\nfloat plot(vec2 st, float pct) {\n  return smoothstep(pct-0.02, pct, st.y) - smoothstep(pct, pct+0.02, st.y);\n}\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution / 2.0;\n  float y = step(0.5,st.x);\n  vec3 color = vec3(y);\n  float pct = plot(st, y);\n  color = (1.0-pct)*color + pct*vec3(0.0, 1.0, 0.0);\n  gl_FragColor = vec4(color, 1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}