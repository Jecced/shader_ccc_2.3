// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        u_resolution: { 
          value: [100.0, 100.0],
          editor: {
            tooltip: "纹理尺寸px（宽 x 高）"
          }
        }
}%

CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision mediump float;

  uniform sampler2D texture;

  uniform Rsolution{
    vec2 u_resolution;
  };

  float plot(vec2 st, float pct) {
    return smoothstep(pct-0.02, pct, st.y) - smoothstep(pct, pct+0.02, st.y);
  }

  void main () {
    vec2 st = gl_FragCoord.xy / u_resolution / 2.0;
    // float y = st.x;
    // float y = pow(st.x,5.0);
    float y = step(0.5,st.x); 
    // float y = smoothstep(0.1,0.9,st.x);




    vec3 color = vec3(y);

    // Plot a line
    float pct = plot(st, y);
    color = (1.0-pct)*color + pct*vec3(0.0, 1.0, 0.0);
    gl_FragColor = vec4(color, 1.0);
  }
}%
