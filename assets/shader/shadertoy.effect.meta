{
  "ver": "1.0.25",
  "uuid": "95dd31a0-3310-4b90-8a97-9118197482b8",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = vec2(a_uv0.x, 1.0 - a_uv0.y);\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_texCoord;\nuniform vec4 cc_time;\nuniform mediump vec4 cc_screenSize;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvec4 mainImage (in vec2 fragCoord) {\n  vec2 uv = fragCoord / cc_screenSize.xy;\n  vec3 col = 0.5 + 0.5 * cos(cc_time.x + v_uv0.xyx + vec3(0, 2, 4));\n  return vec4(col, 1.0);\n}\nvoid main () {\n  vec4 color = mainImage(v_uv0 * cc_screenSize.xy);\n  gl_FragColor = color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = vec2(a_uv0.x, 1.0 - a_uv0.y);\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_texCoord;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvec4 mainImage (in vec2 fragCoord) {\n  vec2 uv = fragCoord / cc_screenSize.xy;\n  vec3 col = 0.5 + 0.5 * cos(cc_time.x + v_uv0.xyx + vec3(0, 2, 4));\n  return vec4(col, 1.0);\n}\nvoid main () {\n  vec4 color = mainImage(v_uv0 * cc_screenSize.xy);\n  gl_FragColor = color;\n}"
      }
    }
  ],
  "subMetas": {}
}