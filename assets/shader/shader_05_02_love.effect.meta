{
  "ver": "1.0.25",
  "uuid": "d76e3a93-0689-4849-8798-95541801eab3",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mediump mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 u_resolution;\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.2, pct, st.y) -\n          smoothstep( pct, pct+0.2, st.y);\n}\nuniform highp vec4 cc_time;\nvoid main () {\n  vec2 st = gl_FragCoord.xy/u_resolution;\n  float x = st.x / 1.0 - 1.0;\n  float time = cc_time.x * 20.0;\n  float diff = 120.0;\n  float time80 = mod(time , diff);\n  if(time80 > diff/2.0){\n    time = diff - time80;\n  }else{\n    time = time80;\n  }\n  float y = .5+sqrt(abs(x)) - 0.8*sqrt(1.0-pow(x,2.0)) * sin(time*x);\n  vec3 color = vec3(0.0,0.0,0.0);\n  float pct = plot(st,y);\n  color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n  gl_FragColor = vec4(color,1.0);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Rsolution{\n  vec2 u_resolution;\n};\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.2, pct, st.y) -\n          smoothstep( pct, pct+0.2, st.y);\n}\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nvoid main () {\n  vec2 st = gl_FragCoord.xy/u_resolution;\n  float x = st.x / 1.0 - 1.0;\n  float time = cc_time.x * 20.0;\n  float diff = 120.0;\n  float time80 = mod(time , diff);\n  if(time80 > diff/2.0){\n    time = diff - time80;\n  }else{\n    time = time80;\n  }\n  float y = .5+sqrt(abs(x)) - 0.8*sqrt(1.0-pow(x,2.0)) * sin(time*x);\n  vec3 color = vec3(0.0,0.0,0.0);\n  float pct = plot(st,y);\n  color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n  gl_FragColor = vec4(color,1.0);\n}"
      }
    }
  ],
  "subMetas": {}
}